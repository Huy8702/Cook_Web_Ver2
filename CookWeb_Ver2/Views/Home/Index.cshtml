@using CookWeb_Ver2.Models;
@model PaginatedList<CookWeb_Ver2.Data.Recipes>

@using Microsoft.AspNetCore.Identity
@inject SignInManager<ApplicationUser> signInManager


<style>
    div.tagFood div div h4 {
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
    }
    div.tagFood div div a img {
        transition: all 0.3s ease-in-out;
    }

    div.tagFood:hover div {
        transform: scale(1.1);
    }

        div.tagFood:hover div div h4 {
            overflow: hidden;
            text-overflow: clip;
            font-size:20px;
            align-content:center;
            text-align:center;
        }
</style>
<div class="row justify-content-end" style="margin-bottom:20px">
    <form class="form-inline my-2 my-lg-0">
        <input class="form-control mr-sm-2" type="search" id="search_field" placeholder="Search" aria-label="Search">
    </form>
    <button type="button" class="btn btn-success my-5 my-sm-0" data-toggle="modal" data-target="#staticBackdrop">
        <i class="total-count fas fa-shopping-cart">-</i>
    </button>
</div>

<div class="featured-area pt-100 pb-20">
    <div class="container">
        <div class="tab featured-tab-area">
            <div class="row justify-content-center">
                <div class=" col-md-12">
                    <ul class="tabs active">
                        <a asp-action="Index" asp-route-keyword="All" class="btn btn-outline-secondary">
                            All
                        </a>
                        <a asp-action="Index" asp-route-keyword="Cơm" class="btn btn-outline-secondary">
                            Cơm/Phở
                        </a>
                        <a asp-action="Index" asp-route-keyword="Heo" class="btn btn-outline-secondary">
                            Món heo
                        </a>
                        <a asp-action="Index" asp-route-keyword="Bò" class="btn btn-outline-secondary">
                            Món bò
                        </a>
                        <a asp-action="Index" asp-route-keyword="Rau" class="btn btn-outline-secondary">
                            Món rau
                        </a>
                        <a asp-action="Index" asp-route-keyword="Thử" class="btn btn-outline-secondary">
                            Món thử
                        </a>
                    </ul>
                </div>
            </div>
        </div>
        <div class="tab featured-tab-area">
            <div class="tab_content current active pt-45">
                <div class="tabs_item current">   
                    <div class="row justify-content-center">
                        @foreach (var item in Model)
                        {
                            <div class="tagFood col-lg-3 col-md-12">
                                <div class="featured-item">
                                    <div class="featured-item-img">
                                        @if(item.ImagePath == null || item.ImagePath == string.Empty)
                                        {
                                            <a asp-action="Details" asp-route-id="@item.Id" asp-controller="Recipes">
                                                <img src="/uploads/Food.png" alt="Images">
                                            </a>
                                        }
                                        else
                                        {
                                            <a asp-action="Details" asp-route-id="@item.Id" asp-controller="Recipes">
                                                <img src="@item.ImagePath" alt="Images">
                                            </a>
                                        }
                                    </div>
                                    <div class="content">
                                        <h4>@item.Name</h4>
                                        <hr>
                                        <div class="content-in">
                                            <h4><i class="fa fa-clock"></i> @item.CookingTime .sec </h4>
                                        </div>
                                        <hr>
                                        <div class="featured-content-list" style="justify-content:center">
                                            <button type="button" data-id="@item.Id" data-name="@item.Name" class="default-btn border-radius-5"> Add to cart</button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>


<!-- Modal -->
<div class="modal fade" id="staticBackdrop" data-backdrop="static" data-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="staticBackdropLabel">Your Cart</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <table class="show-cart table">
                </table>
                @* <div class="grand-total">Total price: ₹<span class="total-cart"></span></div> *@
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                <button type="button" class="btn btn-danger" onclick="ClearAllItem()">Clear All</button>
                <form asp-action="Index">
                    <button class="subimt-cart-button btn btn-primary" style="border-radius: 8px;" onclick="submitCart()">Submit Cart</button>
                </form>
                <!-- <button type="button" class="btn btn-danger clear-all">Clear All</button> -->
            </div>
        </div>
    </div>
</div>

<!-- jQuery -->
<script src="https://code.jquery.com/jquery-3.6.3.js"></script>

<!-- Bootstrap JavaScript (choose one of the following) -->
<!-- Option 1: Bootstrap JS -->
<script src="https://cdn.jsdelivr.net/npm/bootstrap@4.6.2/dist/js/bootstrap.min.js"></script>

<!-- Option 2: Bootstrap Bundle (includes Popper.js) -->
<script src="https://cdn.jsdelivr.net/npm/bootstrap@4.6.2/dist/js/bootstrap.bundle.min.js"></script>

<script>
    var shoppingCart = (function () {

        cart = [];

        function Item(id, name, count, type) {
            this.name = name;
            this.id = id;
            this.count = count;
            this.type = type;
        }

        // Save cart
        function saveCart() {
            localStorage.setItem('shoppingCart', JSON.stringify(cart));
        }

        // Load cart
        function loadCart() {
            cart = JSON.parse(localStorage.getItem('shoppingCart'));
        }
        if (localStorage.getItem("shoppingCart") != null) {
            loadCart();
        }


        var obj = {};

        // Add to cart
        obj.addItemToCart = function (id, name, count, type) {
            for (var item in cart) {
                if (cart[item].name === name) {
                    cart[item].count++;
                    saveCart();
                    return;
                }
            }
            var item = new Item(id, name, count, type);
            cart.push(item);
            saveCart();
        }
        // Set count from item
        obj.setCountForItem = function (name, count) {
            for (var i in cart) {
                if (cart[i].name === name) {
                    cart[i].count = count;
                    break;
                }
            }
            saveCart();
        };
        // Set count from item
        obj.setTypeForItem = function (name, type) {
            for (var i in cart) {
                if (cart[i].name === name) {
                    cart[i].type = type;
                    break;
                }
            }
            saveCart();
        };
        // Remove item from cart
        obj.removeItemFromCart = function (name) {
            for (var item in cart) {
                if (cart[item].name === name) {
                    cart[item].count--;
                    if (cart[item].count === 0) {
                        cart.splice(item, 1);
                    }
                    break;
                }
            }
            saveCart();
        }

        // Remove all items from cart
        obj.removeItemFromCartAll = function (name) {
            for (var item in cart) {
                if (cart[item].name === name) {
                    cart.splice(item, 1);
                    break;
                }
            }
            saveCart();
        }

        // Clear cart
        obj.clearCart = function () {
            cart = [];
            saveCart();
        }

        // Count cart
        obj.totalCount = function () {
            var totalCount = 0;
            for (var item in cart) {
                totalCount += cart[item].count;
            }
            return totalCount;
        }

        // List cart
        obj.listCart = function () {
            var cartCopy = [];
            for (i in cart) {
                item = cart[i];
                itemCopy = {};
                for (p in item) {
                    itemCopy[p] = item[p];
                }
                cartCopy.push(itemCopy)
            }
            return cartCopy;
        }
        return obj;
    })();

    // Add item
    $('.default-btn').click(function (event) {
        // alert('working');
        event.preventDefault();
        var name = $(this).data('name');
        var id = Number($(this).data('id'));
        shoppingCart.addItemToCart(id, name, 1, "takeaway");
        displayCart();
    });

    // Clear items
    $('.clear-cart').click(function () {
        shoppingCart.clearCart();
        displayCart();
    });

    function displayCart() {
        
        var cartArray = shoppingCart.listCart();
        var output = "";
        for (var i in cartArray) {
            output += "<tr>"
                + "<td>" + cartArray[i].name + "</td>"
                // + "<td>(" + cartArray[i].price + ")</td>"
                + "<td><div class='input-group'>"
                + "<input type='number' class='item-count form-control' data-name='" + cartArray[i].name + "' value='" + cartArray[i].count + "'>"
                + "</div></td>"
                + "<td><button class='delete-item btn btn-danger' data-name='" + cartArray[i].name + "'> - </button></td>"
                + "<td colspan='3'>"
                + "<select class='order-type form-control' id='order-type' data-name='" + cartArray[i].name + "'>"
                + "<option value='takeaway' " + (cartArray[i].type === 'takeaway' ? 'selected' : '') + ">Takeaway</option>"
                + "<option value='eatin' " + (cartArray[i].type === 'eatin' ? 'selected' : '') + ">Eat In</option>"
                + "</select>"
                + "</td>"
                + "</tr>";
        }
        $('.show-cart').html(output);
        $('.total-count').html("  " + shoppingCart.totalCount()+" ");
        
    }

    // Delete item button

    $('.show-cart').on("click", ".delete-item", function (event) {
        var name = $(this).data('name')
        shoppingCart.removeItemFromCart(name);
        displayCart();
    })

    // Item count input
    $('.show-cart').on("change", ".item-count", function (event) {
        var name = $(this).data('name');
        var count = Number($(this).val());
        shoppingCart.setCountForItem(name, count);
        displayCart();
    });

    // Item type input change by combobox
    $('.show-cart').on("change", ".order-type", function (event) {
        var name = $(this).data('name');
        var type = $(this).val();
        shoppingCart.setTypeForItem(name, type);
        displayCart();
    });

    // Function to load saved item types from localStorage
    function loadSavedItemTypes() {
        $('.show-cart .form-control').each(function () {
            var name = $(this).data('name');
            var savedType = localStorage.getItem(name);
            if (savedType) {
                $(this).val(savedType); // Set the selected value for the combo box
            }
        });
    }

    displayCart();

    //////// ui script start /////////
    // Tabs Single Page
    $('.tab ul.tabs').addClass('active').find('> li:eq(0)').addClass('current');
    $('.tab ul.tabs li a').on('click', function (g) {
        var tab = $(this).closest('.tab'),
            index = $(this).closest('li').index();
        tab.find('ul.tabs > li').removeClass('current');
        $(this).closest('li').addClass('current');
        tab.find('.tab_content').find('div.tabs_item').not('div.tabs_item:eq(' + index + ')').slideUp();
        tab.find('.tab_content').find('div.tabs_item:eq(' + index + ')').slideDown();
        g.preventDefault();
    });


    function submitCart() {
        // Lấy danh sách sản phẩm trong giỏ hàng
        const cartItems = shoppingCart.listCart();
        const orderDetails = [];

        for (var i in cartItems) {
            const orderDetail = {
                RecipeId: cartItems[i].id,
                Quantity: cartItems[i].count,
                TypeFood: cartItems[i].type
            };

            orderDetails.push(orderDetail);
        }

        // Gửi yêu cầu POST đến action Index
        const xhr = new XMLHttpRequest();
        xhr.open('POST', '/Home/Post');
        xhr.setRequestHeader('Content-Type', 'application/json');
        xhr.onreadystatechange = function () {
            if (xhr.readyState === 4 && xhr.status === 200) {
                // Xử lý kết quả trả về từ server
                const response = JSON.parse(xhr.responseText);
                console.log(response);
            }
        };
        xhr.send(JSON.stringify(orderDetails));

        alert("Thanks for your order");
        shoppingCart.clearCart();
    }

    function ClearAllItem() {
        shoppingCart.clearCart();
        displayCart();
    }

    document.addEventListener("DOMContentLoaded", function () {
        var searchField = document.getElementById("search_field");
        var items = document.querySelectorAll(".featured-item");

        searchField.addEventListener("input", function () {
            var searchTerm = searchField.value.toLowerCase();

            items.forEach(function (item) {
                var itemName = item.querySelector("h4").textContent.toLowerCase();
                var isVisible = itemName.includes(searchTerm);

                item.style.display = isVisible ? "block" : "none";
            });
        });
    });
</script>

