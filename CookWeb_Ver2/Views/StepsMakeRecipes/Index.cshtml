@model PaginatedList<CookWeb_Ver2.Data.StepsMakeRecipes>

@{
    ViewData["Title"] = "Index";
}

<p>
    <a asp-action="Create">Create New</a>
</p>

<form asp-action="Index" method="get">
    <div class="form-actions no-color">
        <p>
            Find by name: <input type="text" name="SearchString" value="@ViewData["CurrentFilter"]" />
            <input type="submit" value="Search" class="btn btn-default" /> |
            <a asp-action="Index">Back to Full List</a>
        </p>
    </div>
</form>

<table class="table">
    <thead>
        <tr>
            <th>
                StepNumber
            </th>
            <th>
                StepName
            </th>
            <th>
                ActionCode
            </th>
            <th>
                Speed
            </th>
            <th>
                Time
            </th>
            <th>
                Recipes
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.StepNumber)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.StepName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ActionCode)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item._Speed)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item._Second)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Recipes.Name)
            </td>
            <td>
                    <a asp-action="Edit" asp-route-id="@item.Id"><i class="fa-solid fa-pen"></i></a> |
                
                    <a asp-action="Delete" asp-route-id="@item.Id"><i class="fa-solid fa-trash"></i></a> |
                    <a asp-action="Create" asp-route-recipesId="@item.RecipesId"><i class="fa-solid fa-sliders"></i></a>
            </td>
        </tr>
}
    </tbody>
</table>

@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex - 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @prevDisabled">
    Previous
</a>
<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex + 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @nextDisabled">
    Next
</a>
